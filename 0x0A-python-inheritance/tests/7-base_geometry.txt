>>> import sys
>>> from importlib import import_module
>>> sys.path.append('..')

>>> module = import_module('7-base_geometry')
>>> BaseGeometry = module.BaseGeometry
>>> a = BaseGeometry()

>>> type(a) == BaseGeometry
True

>>> a.integer_validator()
Traceback (most recent call last):
TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'

>>> a.integer_validator("name")
Traceback (most recent call last):
TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'

>>> a.integer_validator("a", 2)

>>> a.integer_validator("a", "x")
Traceback (most recent call last):
TypeError: a must be an integer

>>> a.integer_validator("age", True)
Traceback (most recent call last):
TypeError: age must be an integer

>>> a.integer_validator("age", None)
Traceback (most recent call last):
TypeError: age must be an integer

>>> a.integer_validator("age", [1, 5, 7])
Traceback (most recent call last):
TypeError: age must be an integer

>>> a.integer_validator("age", (2, 3))
Traceback (most recent call last):
TypeError: age must be an integer

>>> a.integer_validator("age", {7, 9})
Traceback (most recent call last):
TypeError: age must be an integer

>>> a.integer_validator("age", 0)
Traceback (most recent call last):
ValueError: age must be greater than 0

>>> a.integer_validator("age", -12)
Traceback (most recent call last):
ValueError: age must be greater than 0

>>> a.area()
Traceback (most recent call last):
Exception: area() is not implemented
